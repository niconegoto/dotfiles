[user]
	email = sotarok@crocos.co.jp
	name = Sotaro KARASAWA
[core]
	editor = /usr/bin/vim
	excludesfile = /home/sotarok/.gitignore
	pager = less -FRSX
[push]
	default = tracking
[color]
	ui = auto
	branch = auto
	diff = auto
	status = auto
	interactive = auto
	grep = auto
[github]
	user = sotarok
	token = 6becede51f86c24aa3377b3467470d5b
[alias]
	co = checkout
	ci = commit
	st = status
	up = pull
	pull = pull --rebase
	llog = log --date=local
	logp = log --pretty=oneline
	logps = log --pretty=oneline --stat
	graph = log --graph --pretty='format:%h %Cgreen%an%Creset | %s %Cred%d%Creset'
	ls = log --stat          # logに変更されたファイルも一緒に出す
	lp = log -p              # diffも一緒に出す
	la = log --pretty=\"format:%ad %h (%an): %s\" --date=short  # ざっくりログ出す
	lr = log origin          # originのlog
    log-graph = log --graph --date=iso --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
	log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
	#branches
	br = branch
	ba = branch -a           # originも含めた全てのbranchを表示
	bm = branch --merged     # merge済みのbranchを表示
	bn = branch --no-merged  # mergeしてないbranchを表示
	# log関連
	wc = whatchanged         # logに変更されたファイルも一緒に出す
	oneline = log --pretty=oneline
	ranking = shortlog -s -n --no-merges
	# mergeの際にconflictが起きたファイルを編集
	edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
	# mergeの際にconflictが起きたファイルをadd
	add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
	# grep関連
	gr = grep
	gn = grep -n
